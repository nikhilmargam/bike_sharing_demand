# Project: Predicting Bike Sharing Demand

# Summary:
# This project builds a basic linear regression model in R to predict bike sharing demand based on weather conditions (temperature, humidity) and time of day.  This can be used to optimize bike availability in real-time, preventing shortages or surpluses at specific locations.  While this is a simplified example, it demonstrates the core concepts of building a predictive model and can be expanded upon with more data and features.

# Data:
# We'll create a synthetic dataset for demonstration purposes. In a real-world scenario, you would obtain this data from bike sharing service providers, weather APIs, and potentially other sources.

# Create Sample Data
set.seed(123) # For reproducibility
n <- 100 # Number of observations
temperature <- rnorm(n, 25, 5) # Average temperature (Celsius)
humidity <- runif(n, 40, 80) # Percentage humidity
time_of_day <- sample(c("Morning", "Afternoon", "Evening", "Night"), n, replace = TRUE)
bike_demand <- 20 + 2*temperature - 0.5*humidity + ifelse(time_of_day == "Morning", 10, 0) + ifelse(time_of_day == "Afternoon", 5, 0) + rnorm(n, 0, 5) # Demand with noise

bike_data <- data.frame(temperature, humidity, time_of_day, bike_demand)

# Exploratory Data Analysis (EDA)
plot(bike_data$temperature, bike_data$bike_demand, xlab = "Temperature", ylab = "Bike Demand", main = "Bike Demand vs. Temperature")
plot(bike_data$humidity, bike_data$bike_demand, xlab = "Humidity", ylab = "Bike Demand", main = "Bike Demand vs. Humidity")
boxplot(bike_demand ~ time_of_day, data = bike_data, main = "Bike Demand by Time of Day")

# Model Building (Linear Regression)
model <- lm(bike_demand ~ temperature + humidity + time_of_day, data = bike_data)
summary(model)  # View model statistics

# Prediction
# Create new data for prediction (e.g., weather forecast)
new_data <- data.frame(temperature = 28, humidity = 60, time_of_day = "Afternoon")
predicted_demand <- predict(model, newdata = new_data)
print(paste("Predicted Bike Demand:", predicted_demand))

# Model Evaluation (on the original data for demonstration - in real life split into train/test)
predictions_on_original_data <- predict(model, data=bike_data)
rmse <- sqrt(mean((bike_data$bike_demand - predictions_on_original_data)^2))
print(paste("RMSE on training data:", rmse))


# Example of how to use the model in a real-time application (Conceptual)
# 1. Get real-time weather data (temperature, humidity) and time of day.
# 2. Create a new data frame with this information.
# 3. Use the predict() function with your model and the new data frame to get the predicted bike demand.
# 4. Adjust bike distribution based on the prediction (e.g., move bikes to areas with higher predicted demand).

# Further Improvements:
# - Use more data and features (e.g., day of the week, weather conditions like rain, special events).
# - Split data into training and testing sets for proper model evaluation.
# - Explore other models (e.g., non-linear regression, time series models).
# - Implement cross-validation to assess model performance.
# - Consider feature engineering (creating new features from existing ones).
# - Deploy the model using an API or other service.
